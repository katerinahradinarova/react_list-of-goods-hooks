{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isStarted","setStarted","NONE","sortType","setSortType","isReversed","setReversed","visibleGoods","goods","ALPABET","sort","a","b","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","onClick","prevState","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,oDAbCC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAgCE,IAAME,EAAgB,WAC3B,MAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAgCF,mBAASH,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAkCL,oBAAS,GAA3C,mBAAOM,EAAP,KAAmBC,EAAnB,KAEMC,EA/BR,SACEC,EACAL,EACAE,GAEA,IAAME,EAAY,YAAOC,GAEzB,OAAQL,GACN,KAAKP,EAASa,QACZF,EAAaG,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAC5C,MACF,KAAKhB,EAASkB,OACZP,EAAaG,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,OAASH,EAAEG,UAE3C,KAAKnB,EAASM,MAShB,OAJIG,GACFE,EAAaS,UAGRT,EAQcU,CAAkBpB,EAAiBM,EAAUE,GAElE,OACE,qBAAKa,UAAU,kCAAf,SACGlB,EAEG,qCACE,wBACEmB,KAAK,SACLC,QAAS,kBAAMhB,EAAYR,EAASa,UACpCS,UAAU,kCAHZ,iCAQA,wBACEC,KAAK,SACLC,QAAS,kBAAMhB,EAAYR,EAASkB,SACpCI,UAAU,kCAHZ,4BAQA,wBACEC,KAAK,SACLC,QAAS,kBAAMd,GAAY,SAAAe,GAAS,OAAKA,MACzCH,UAAU,kCAHZ,qBAQA,wBACEC,KAAK,SACLC,QAAS,kBAAMhB,EAAYR,EAASM,OACpCgB,UAAU,6BAHZ,mBAQA,oBAAIA,UAAU,QAAd,SACGX,EAAae,KAAI,SAAAC,GAChB,OACE,oBAAeL,UAAU,cAAzB,SAAwCK,GAA/BA,WAOjB,wBACEJ,KAAK,SACLC,QAAS,kBAAMnB,GAAW,IAC1BiB,UAAU,iBAHZ,sBCpGVM,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.133f989c.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPABET:\n      visibleGoods.sort((a, b) => a.localeCompare(b));\n      break;\n    case SortType.LENGTH:\n      visibleGoods.sort((a, b) => a.length - b.length);\n      break;\n    case SortType.NONE:\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isStarted, setStarted] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setReversed] = useState(false);\n\n  const visibleGoods = getReorderedGoods(goodsFromServer, sortType, isReversed);\n\n  return (\n    <div className=\"App block notification is-white\">\n      {isStarted\n        ? (\n          <>\n            <button\n              type=\"button\"\n              onClick={() => setSortType(SortType.ALPABET)}\n              className=\"button is-link is-outlined mr-3\"\n            >\n              Sort alphabetically\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={() => setSortType(SortType.LENGTH)}\n              className=\"button is-link is-outlined mr-3\"\n            >\n              Sort by length\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={() => setReversed(prevState => !prevState)}\n              className=\"button is-link is-outlined mr-3\"\n            >\n              Reverse\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={() => setSortType(SortType.NONE)}\n              className=\"button is-info is-outlined\"\n            >\n              Reset\n            </button>\n\n            <ul className=\"Goods\">\n              {visibleGoods.map(good => {\n                return (\n                  <li key={good} className=\"Goods__item\">{good}</li>\n                );\n              })}\n            </ul>\n          </>\n        )\n        : (\n          <button\n            type=\"button\"\n            onClick={() => setStarted(true)}\n            className=\"button is-info\"\n          >\n            Start\n          </button>\n        )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}